@model Ticket_Tracker.ViewModels.CustomerTicket

@{
    ViewBag.Title = "New Ticket";
}

<h2>New Ticket</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group col-md-6 col-sm-6">
            @Html.LabelFor(model => model.Ticket.TicketNumber, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4" })
            <div class="col-md-8 col-sm-8">
                @Html.EditorFor(model => model.Ticket.TicketNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ticket.TicketNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6 col-sm-6">
            @Html.LabelFor(model => model.Ticket.ActionWith, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4" })
            <div class="col-md-8 col-sm-8">
                @Html.DropDownListFor(model => model.Ticket.ActionWith, new SelectList(
                  new List<Object>{
                       new { value = "Customer" , text = "Customer" },
                       new { value = "Relayware" , text = "Relayware" },
                    }, "value", "text"),
                    "--Select Action With--", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Ticket.ActionWith, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6 col-sm-6">
            @Html.LabelFor(model => model.Ticket.Description, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4" })
            <div class="col-md-8 col-sm-8">
                @Html.EditorFor(model => model.Ticket.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ticket.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6 col-sm-6">
            @Html.LabelFor(model => model.Ticket.InProgressWith, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4" })
            <div class="col-md-8 col-sm-8">
                @Html.EditorFor(model => model.Ticket.InProgressWith, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ticket.InProgressWith, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6 col-sm-6">
            @Html.LabelFor(model => model.Ticket.DefinedPriority, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4" })
            <div class="col-md-8 col-sm-8">
                @Html.DropDownListFor(model => model.Ticket.DefinedPriority, new SelectList(
                  new List<Object>{
                       new { value = "P1" , text = "P1" },
                       new { value = "P2" , text = "P2" },
                       new { value = "P3" , text = "P3" },
                       new { value = "P4" , text = "P4" }
                    }, "value", "text"),
                    "--Select Action With--", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Ticket.DefinedPriority, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6 col-sm-6">
            @Html.LabelFor(model => model.Customer, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4" })
            <div class="col-md-8 col-sm-8">
                @Html.DropDownListFor(model => model.Customer, ViewBag.cList as SelectList, "--Select Customer--", htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group col-md-6 col-sm-6">
            @Html.LabelFor(model => model.Ticket.Status, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4" })
            <div class="col-md-8 col-sm-8">
                @Html.DropDownListFor(model => model.Ticket.Status, new SelectList(
                  new List<Object>{
                       new { value = "Open" , text = "Open" },
                       new { value = "Closed" , text = "Closed" },
                    }, "value", "text"),
                "--Select Status--", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Ticket.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6 col-sm-6">
            @Html.LabelFor(model => model.Ticket.DateCreated, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4" })
            <div class="col-md-8 col-sm-8">
                @Html.EditorFor(model => model.Ticket.DateCreated, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ticket.DateCreated, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6 col-sm-6">
            @Html.LabelFor(model => model.Ticket.Notes, htmlAttributes: new { @class = "control-label col-md-4 col-sm-4" })
            <div class="col-md-8 col-sm-8">
                @Html.TextAreaFor(model => model.Ticket.Notes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ticket.Notes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
                @Html.ActionLink("Back to List", "Index", "DailyTicketCounts", null, new { @class = "btn btn-primary" })
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
